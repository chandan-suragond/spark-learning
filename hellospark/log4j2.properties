status = error
name = SparkLogConfig

# ---------------------------
# Console Appender
# ---------------------------
appender.console.type = Console
appender.console.name = console
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n

# ---------------------------
# Rolling File Appender
# ---------------------------
appender.file.type = RollingFile
appender.file.name = file
appender.file.fileName = C:/Users/chasurag/Documents/my repos/hellospark/app-logs/hellospark.log
appender.file.filePattern = C:/Users/chasurag/Documents/my repos/hellospark/app-logs/hello-spark-%d{yyyy-MM-dd}-%i.log.gz

appender.file.layout.type = PatternLayout
appender.file.layout.pattern = %d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n

appender.file.policies.type = Policies
appender.file.policies.size.type = SizeBasedTriggeringPolicy
appender.file.policies.size.size = 500 MB
appender.file.strategy.type = DefaultRolloverStrategy
appender.file.strategy.max = 2

# ---------------------------
# Application Logger
# ---------------------------
logger.guru.name = guru.learningjournal.spark.examples
logger.guru.level = info
logger.guru.additivity = false
logger.guru.appenderRefs = console, file
logger.guru.appenderRef.console.ref = console
logger.guru.appenderRef.file.ref = file

# ---------------------------
# Spark / Hadoop noisy logs
# ---------------------------
logger.replMain.name = org.apache.spark.repl.Main
logger.replMain.level = warn

logger.jetty.name = org.spark_project.jetty
logger.jetty.level = warn

logger.jettyLife.name = org.spark_project.jetty.util.component.AbstractLifeCycle
logger.jettyLife.level = error

logger.typer.name = org.apache.spark.repl.SparkIMain$exprTyper
logger.typer.level = info

logger.iloop.name = org.apache.spark.repl.SparkILoop$SparkILoopInterpreter
logger.iloop.level = info

logger.parquet1.name = org.apache.parquet
logger.parquet1.level = error

logger.parquet2.name = parquet
logger.parquet2.level = error

logger.hms.name = org.apache.hadoop.hive.metastore.RetryingHMSHandler
logger.hms.level = fatal

logger.hivefn.name = org.apache.hadoop.hive.ql.exec.FunctionRegistry
logger.hivefn.level = error

# ---------------------------
# Root Logger
# ---------------------------
rootLogger.level = warn
rootLogger.appenderRefs = console
rootLogger.appenderRef.console.ref = console
